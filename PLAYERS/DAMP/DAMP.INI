// = DAMP.ini
// = Settings for the MS-DOS MP3 player by Matt Craven
// = You can set the options you use regularly in this
// = file to save you typing them on the command line
// = every time.
// = NB: If you DO specify command line arguments, they
// = will override any options set here.
// = If you leave any options blank, they will use
// = their defaults.
// = There is also a [sound] section below, where you
// = can set up your sound options manually.  However,
// = I'd only recommend changing bits where you know what
// = you're doing.

[options]
random_play = no
graphical_output = no
black_and_white = no
display_track_title_times = 0
sync_to_beats = no
sync_threshold = 5
change_zoom_method = yes
tracks_to_play = 
playback_quality = 4
display_menu = no
display_version = no
continuous_play = no
random_playlists = no
surround_sound = no
show_time_in_gfx_mode = no
text_scope_char = 254
text_scope_smooth = yes
beautify_filenames = yes
show_file_info = no
use_gui = no
posterize_graphics = no
keypad_timeout = 1
ffwd_rew_speed = 1
vol_up_down_speed = 1
startup_mp3 = NONE
start_paused = no
large_skip = 10
sleep_fade = yes

// = The next section lets you select which type of joystick to use.
// = The value can be one of:
// = 
// = -1 : JOY_TYPE_AUTODETECT
// = Attempts to autodetect your joystick hardware. It isn't possible
// = to reliably distinguish between all the possible input setups,
// = so this routine can only ever choose the standard joystick,
// = Sidewider, or GamePad Pro drivers.
// = 
// = 0 : NONE
// = Dummy driver for machines without any joystick.
// = 
// = STD : STANDARD
// = A normal two button stick.
// = 
// = 2PAD: 2 PADS
// = Dual joystick mode (two sticks, each with two buttons).
// = 
// = 4BUT: 4-BUTTON
// = Enable the extra buttons on a 4-button joystick.
// = 
// = 6BUT: 6-BUTTON
// = Enable the extra buttons on a 6-button joystick.
// = 
// = 8BUT: 8-BUTTON
// = Enable the extra buttons on an 8-button joystick.
// = 
// = FPRO: FSPRO
// = CH Flightstick Pro or compatible stick.
// = 
// = WING: WINGEX
// = A Logitech Wingman Extreme, which should also work with any
// = Thrustmaster Mk.I compatible joystick. Also works with the Wingman
// = Warrior, if you plug in the 15 pin plug (remember to unplug the
// = 9-pin plug!) and set the tiny switch in front to the "H" position
// = (you will not be able to use the throttle or the spinner though).
// = 
// = SW  : SIDEWINDER
// = The Microsoft Sidewinder digital pad (supports up to four
// = controllers, each with ten buttons and a digital direction control).
// = 
// = GPRO: GAMEPAD_PRO
// = The Gravis GamePad Pro (supports up to two controllers, each with
// = ten buttons and a digital direction control).
// = 
// = GRIP: GRAVIS GrIP
// = Gravis GrIP driver, using the grip.gll driver file.
// = 
// = GRI4: GRAVIS GrIP (constrained)
// = Version of the Gravis GrIP driver that is constrained to only move
// = along the four main axis.
// = 
// = SNE1: SNESPAD_LPT1
// = SNE2: SNESPAD_LPT2
// = SNE3: SNESPAD_LPT3
// = SNES joypads connected to LPT1, LPT2, and LPT3 respectively.
// = 
// = PSX1: PSXPAD_LPT1
// = PSX2: PSXPAD_LPT2
// = PSX3: PSXPAD_LPT3
// = PSX joypads connected to LPT1, LPT2, and LPT3 respectively. See
// = http://www.ziplabel.com/dpadpro/index.html for information
// = about the parallel cable required. The driver automagically detects
// = which types of PSX pads are connected out of digital, analog (red or
// = green mode), NegCon, multi taps, Namco light guns, Jogcons (force
// = feedback steering wheel) and the mouse. If the controller isn't
// = recognised it is treated as an analog controller, meaning the driver
// = should work with just about anything. You can connect controllers in
// = any way you see fit, but only the first 8 will be used.
// = 
// = The Sony Dual Shock or Namco Jogcon will reset themselves (to digital
// = mode) after not being polled for 5 seconds. This is normal, the same
// = thing happens on a Playstation, it's designed to stop any vibration in
// = case the host machine crashes. other mode switching controllers may
// = have similar quirks. However, if this happens to a Jogcon controller
// = the mode button is disabled. To reenable the mode button on the Jogcon
// = you need to hold down the Start and Select buttons at the same time.
// = 
// = The G-con45 needs to be connected to (and pointed at) a TV type monitor
// = 
// = N641: N64PAD_LPT1
// = N642: N64PAD_LPT2
// = N643: N64PAD_LPT3
// = N64 joypads connected to LPT1, LPT2, and LPT3 respectively. See
// = http://www.st-hans.de/N64.htm for information about the
// = necessary hardware adaptor. It supports up to four controllers on a
// = single parallel port. There is no need to calibrate the analog stick,
// = as this is done by the controller itself when powered up. This means
// = that the stick has to be centred when the controller is initialised.
// = One possible issue people may have with this driver is that it is
// = physically impossible to move the analog stick fully diagonal, but I
// = can't see this causing any major problems. This is because of the
// = shape of the rim that the analog stick rests against. Like the Gravis
// = Game Pad Pro, this driver briefly needs to disable hardware interrupts
// = while polling. This causes a noticable performance hit
// = in both drivers, but there is no way around it. At a (very) rough
// = guess I'd say it slows down 5% - 10%.
// = 
// = WWAR: WINGMAN WARRIOR
// = A Wingman Warrior joystick.
// = 
// = DB91: DB9 on LPT1
// = DB92: DB9 on LPT2
// = DB93: DB9 on LPT3
// = 
// = TGX1: TurboGrafx on LPT1
// = TGX2: TurboGrafx on LPT2
// = TGX3: TurboGrafx on LPT3
// = 
// = SEGI: IFSega ISA
// = SEGP: IFSega PCI
// = SGPF: IFSega PCI FAST
// = 
// = Note that the space at the end of STD and the two spaces at the end
// = of SW are important!

[joystick]
joytype = -1


// = The next section defines the functionality of the joystick.
// = You can assign almost any part of DAMP's controls to a joystick
// = control. The words you can use are:
// = NEXT_TRACK, PREVIOUS_TRACK, VOLUME_UP, VOLUME_DOWN, PAUSE, SURROUND_SOUND,
// = RANDOM, PREVIOUS_PLAYLIST, NEXT_PLAYLIST, REWIND, FAST_FORWARD, QUIT, NONE
// = EXIT_CODE_1, EXIT_CODE_2, EXIT_CODE_3, EXIT_CODE_4, EXIT_CODE_5,
// = EXIT_CODE_6, EXIT_CODE_7, EXIT_CODE_8, EXIT_CODE_9,
// = PREVIOUS_N_TRACKS, NEXT_N_TRACKS
// = 
// = There's also the "volume_fine" setting - if you set this to "yes", then
// = repeated button-presses are required to change the volume. If you set it
// = to "no" then you can hold down the button to change the volume rapidly.

[joystick_control]
volume_fine = yes
up = VOLUME_UP
down = VOLUME_DOWN
left = PREVIOUS_TRACK
right = NEXT_TRACK
fire1 = PAUSE
fire2 = SURROUND_SOUND
fire3 = PREVIOUS_PLAYLIST
fire4 = NEXT_PLAYLIST
fire5 = REWIND
fire6 = FAST_FORWARD
fire7 = QUIT
fire8 = RANDOM
// = The next lot are for the second joystick (if you're using one)
up2 = NONE
down2 = NONE
left2 = NONE
right2 = NONE
fire21 = NONE
fire22 = NONE

// = In this section, you can select which waveform styles to use in
// = graphics mode.  Simply enter yes or no depending on whether you
// = want to use a particular waveform or not.  WARNING: do not set them
// = all to no otherwise DAMP will hang.

[gfx_waveforms]
DOTS = yes
SOLID = yes
CIRCLE = yes
LASER = yes
DUALHORIZONTAL = yes
MULTICIRCLE = yes
MULTILASER = yes
CORNERS = yes
SPINLINES = yes
CONCENTRIC = yes
BLOBS = yes

// = In this section, you can select which modifier (zoom) styles to use in
// = graphics mode.  Simply enter yes or no depending on whether you
// = want to use a particular style or not.  WARNING: do not set them
// = all to no otherwise DAMP will hang.

[gfx_modifiers]
ZOOMIN = yes
FISHEYE = yes
ZOOMUP = yes
SCROLLUPDOWN = yes
ZOOMDOWN = yes
SCROLLRIGHTLEFT = yes
DOUBLEFISHEYE = yes
SINZOOM = yes
INVSINZOOM = yes
ZOOMOUT = yes
SPHERE = yes
ROTATE_LEFT = yes
ROTATE_RIGHT = yes
ROTATE_LEFT_ZOOM = yes
ROTATE_RIGHT_ZOOM = yes
SPIRAL_LEFT = yes
SPIRAL_RIGHT = yes
SINCOS = yes
PEARLGLASS = yes
TRISTAR = yes
SPIKES = yes
WATERFALL = yes
WAVYZOOM = yes
RIPPLE = yes
WARP = yes
SUCKER = yes

// = The following section defines which filter you'd like
// = to use in the graphics mode, followed by the filter definitions
// = themselves

[graphics]
filter = gf_blur_heavy

[gf_none]
0 = 0 0 0
1 = 0 1 0
2 = 0 0 0
divisor = 1

[gf_blur]
0 = 0 1 0
1 = 1 0 1
2 = 0 1 0
divisor = 4

[gf_blur_heavy]
0 = 1 1 1
1 = 1 1 1
2 = 1 1 1
divisor = 10

[gf_edge_and_blur]
0 = 0 1 0
1 = 1 -4 1
2 = 0 1 0
divisor = 2

[gf_split]
0 = -4 1 4
1 = 1 1 1
2 = 4 1 -4
divisor = 16

// = In this section you can adjust GUI settings
[gui]
// = screen dimensions:
width = 640
height = 480
// = colour set
colours = gui_c_default

// = GUI colour set definitions.  Each item is a set of 3 numbers,
// = 0 to 255, representing red, green and blue components of the colour.

[gui_c_default]
background = 128 128 128
titlebar = 255 0 0
highlight = 255 255 255
shadow = 0 0 0

[gui_c_windows]
background = 0 128 100
titlebar = 0 0 192
highlight = 255 255 255
shadow = 0 0 0

[gui_c_dark]
background = 0 0 0
titlebar = 64 64 64
highlight = 255 255 0
shadow = 128 64 0

[gui_c_psycho]
background = 0 255 0
titlebar = 255 0 255
highlight = 255 255 0
shadow = 128 0 255

// = In this section you can adjust settings for the LCD driver

[lcd]
// = The bigger the number, the faster it scrolls
scroll_speed = 4
// = Define the width of the display
display_width = 16
// = Define the number of lines on the display
display_lines = 2
// = Which driver to use
driver = LCDWIRE1.sc

// = In this section you can adjust settings for the INPUT driver

[input]
driver = ICONSOLE.sc

[sound]
# digital sound output driver
#  0        - none
#  SB       - Sound Blaster (autodetect breed)
#  SB10     - Sound Blaster 1.0
#  SB15     - Sound Blaster 1.5
#  SB20     - Sound Blaster 2.0
#  SBP      - Sound Blaster Pro
#  SB16     - Sound Blaster 16
#  ESS      - ESS AudioDrive
#  ESC      - Ensoniq Soundscape
#  WSS      - Windows Sound System
digi_card = 

#How many voices to reserve for the driver
digi_voices = 2

# maximum volume (range 0-255)
digi_volume = 255

# sample mixing (0=fastest, 1=use 16 bit inputs, 2=interpolation)
quality = 

# toggling this between 0 and 1 reverses the left/right panning of samples
flip_pan = 

# Sound port address (usually 220)
sound_port = 

# Sound DMA channel (usually 1)
sound_dma = 

# Sound IRQ number (usually 7)
sound_irq = 

# Sound sample frequency (11906, 16129, 22727, 44100, or 45454)
sound_freq = 
